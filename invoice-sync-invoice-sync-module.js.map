{"version":3,"sources":["webpack:///./src/app/modules/invoice-sync/components/index/index.component.html","webpack:///./src/app/modules/invoice-sync/components/index/index.component.scss","webpack:///./src/app/modules/invoice-sync/components/index/index.component.ts","webpack:///./src/app/modules/invoice-sync/invoice-sync.module.ts","webpack:///./src/app/modules/invoice-sync/invoice-sync.routing.ts","webpack:///./src/app/modules/invoice-sync/shared/index.ts","webpack:///./src/app/modules/invoice-sync/shared/invoice-sync.service.ts"],"names":[],"mappings":"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","file":"invoice-sync-invoice-sync-module.js","sourcesContent":["module.exports = \"<div class=\\\"row search-section\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4\\\" style=\\\"max-height: 70px;\\\">\\r\\n      <div class=\\\"list-header row\\\">\\r\\n          <div class=\\\"col-md-12\\\">\\r\\n            <div class=\\\"pull-right button-panel\\\" >\\r\\n              <dx-button (click)=\\\"xuatHoaDon()\\\" icon=\\\"assets\\\\img\\\\icons\\\\XuatHD.png\\\" text=\\\"Xuất hóa đơn\\\" type=\\\"default\\\" [disabled]=\\\"!(selectedRows.length == 1)\\\"></dx-button>\\r\\n              <dx-button *ngIf=\\\"ishowTraLai\\\" (click)=\\\"traLai()\\\" icon=\\\"assets\\\\img\\\\icons\\\\XuatFile.png\\\" text=\\\"Trả lại\\\" type=\\\"default\\\" [disabled]=\\\"!(selectedRows.length == 1)\\\"></dx-button>\\r\\n              <dx-button (click)=\\\"layDeNghiXuat()\\\" icon=\\\"assets\\\\img\\\\icons\\\\LayFileMau.png\\\" text=\\\"Lấy đề nghị xuất\\\" type=\\\"default\\\"></dx-button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<dx-data-grid \\r\\n  id=\\\"gridContainer\\\"\\r\\n  (onSelectionChanged)=\\\"selectionChanged($event)\\\"\\r\\n  [dataSource]=\\\"dataSource\\\"\\r\\n  [showRowLines]=\\\"true\\\"\\r\\n  [(selectedRowKeys)]=\\\"selectedRows\\\"\\r\\n  [allowColumnResizing]=\\\"true\\\"\\r\\n  [columnMinWidth]=\\\"50\\\"\\r\\n  [columnResizingMode]=\\\"true\\\"\\r\\n  [columnAutoWidth]=\\\"true\\\"\\r\\n  [wordWrapEnabled]=\\\"true\\\"\\r\\n  (onRowPrepared)=\\\"onRowPrepared($event)\\\">\\r\\n  <dxo-selection selectAllMode=\\\"page\\\" mode=\\\"multiple\\\">\\r\\n  </dxo-selection>  \\r\\n  <dxo-load-panel [enabled]=\\\"true\\\"></dxo-load-panel>\\r\\n  <dxo-sorting mode=\\\"multiple\\\"></dxo-sorting>\\r\\n  <dxo-selection mode=\\\"multiple\\\"></dxo-selection>\\r\\n  <dxo-filter-row [visible]=\\\"true\\\"></dxo-filter-row>\\r\\n  <!-- <dxi-column dataField=\\\"export_time\\\"  caption=\\\"Ngày chuyển\\\" [width]=\\\"110\\\" alignment=\\\"center\\\"></dxi-column> -->\\r\\n  <dxi-column dataField=\\\"export_time\\\" caption=\\\"Ngày chuyển\\\" [width]=\\\"90\\\" dataType=\\\"date\\\" format=\\\"dd/MM/yyyy\\\" dateSerializationFormat=\\\"yyyy-MM-dd\\\" sortOrder=\\\"desc\\\" alignment=\\\"center\\\"></dxi-column>\\r\\n  <dxi-column dataField=\\\"export_user\\\" caption=\\\"Người chuyển\\\" [width]=\\\"120\\\" alignment=\\\"left\\\"></dxi-column>\\r\\n  <dxi-column dataField=\\\"buyer_tax_code\\\" caption=\\\"Mã số thuế\\\" [width]=\\\"120\\\" alignment=\\\"left\\\"></dxi-column>\\r\\n  <dxi-column dataField=\\\"customer_code\\\" caption=\\\"Mã khách hàng\\\" [width]=\\\"120\\\" alignment=\\\"center\\\"></dxi-column>\\r\\n  <dxi-column *ngIf=\\\"!isHistory\\\" cellTemplate=\\\"customerName\\\" caption=\\\"Tên khách hàng\\\" alignment=\\\"left\\\"></dxi-column>\\r\\n  <dxi-column *ngIf=\\\"isHistory\\\" dataField=\\\"buyer_name\\\" caption=\\\"Tên khách hàng\\\" alignment=\\\"left\\\"></dxi-column>\\r\\n  <dxi-column dataField=\\\"buyer_address\\\" caption=\\\"Địa chỉ xuất\\\" [width]=\\\"200\\\" alignment=\\\"left\\\"></dxi-column>\\r\\n  <dxi-column dataField=\\\"export_content\\\" caption=\\\"Nội dung xuất\\\" [width]=\\\"180\\\" alignment=\\\"left\\\"></dxi-column>\\r\\n  <dxi-column dataField=\\\"total_payment\\\" caption=\\\"Tổng tiền (đ)\\\" dataType=\\\"number\\\" format=\\\"0,###.##\\\" [width]=\\\"140\\\" alignment=\\\"right\\\"></dxi-column>\\r\\n  <dxi-column dataField=\\\"note\\\" caption=\\\"Ghi chú\\\" [width]=\\\"100\\\" alignment=\\\"left\\\"></dxi-column>\\r\\n\\r\\n  <div *dxTemplate=\\\"let d of 'customerName'\\\">\\r\\n    <p>{{ d.data.customer_name || d.data.buyer_name }}</p>\\r\\n  </div>\\r\\n\\r\\n  <dxo-summary>\\r\\n    <dxi-total-item summaryType=\\\"custom\\\" cssClass=\\\"dxi-total-payment-total_payment\\\" [customizeText]=\\\"customizeText\\\" showInColumn=\\\"total_payment\\\">\\r\\n    </dxi-total-item>\\r\\n  </dxo-summary>\\r\\n\\r\\n  <dxo-remote-operations [sorting]=\\\"true\\\" [paging]=\\\"true\\\" [filtering]=\\\"true\\\" [summary]=\\\"true\\\">\\r\\n  </dxo-remote-operations>\\r\\n  <dxo-paging [pageSize]=\\\"15\\\"></dxo-paging>\\r\\n  <dxo-pager \\r\\n      [showPageSizeSelector]=\\\"true\\\" \\r\\n      [allowedPageSizes]=\\\"[15, 50, 100]\\\"\\r\\n      [showNavigationButtons]=\\\"true\\\"\\r\\n      [showInfo]=\\\"true\\\"\\r\\n      infoText=\\\"Trang {0} trong {1} trang của {2} dòng\\\">\\r\\n  </dxo-pager>\\r\\n</dx-data-grid>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { InvoiceSyncService } from '@modules/invoice-sync/shared';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Library } from '@core/index';\r\nimport { SearchService } from '@modules/search/shared';\r\nimport { ListsService } from '@modules/lists/shared';\r\nimport { AuthService, VStringService } from '@core/index';\r\nimport { InvoiceService } from '@shared/service/invoice.service';\r\nimport { DxDataGridComponent } from 'devextreme-angular';\r\n@Component({\r\n  selector: 'app-index',\r\n  templateUrl: './index.component.html',\r\n  styleUrls: ['./index.component.scss']\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  @ViewChild(DxDataGridComponent) dataGrid: DxDataGridComponent;\r\n  dataSource: any;\r\n  selectedRows: Array<any> = [];\r\n  selectedItems: Array<any> = [];\r\n  bsModalRef: BsModalRef;\r\n  listDM: any;\r\n  showKeepNumber: boolean = false;\r\n  ishowTraLai: boolean = true;\r\n  configs: any;\r\n  isHistory: boolean = false;\r\n  objStatusBtn = {}\r\n  arrayCategory: any = [\r\n    {\r\n      \"code\": \"DM_NHOM_KHACH_HANG\",\r\n      \"order\": 0\r\n    },\r\n    {\r\n      \"code\": \"DM_NOI_XUAT_HOA_DON\",\r\n      \"order\": 0\r\n    },\r\n  ];\r\n  constructor(\r\n    private invoiceSyncService: InvoiceSyncService,\r\n    private modalService: BsModalService,\r\n    private router: Router,\r\n    private searchService: SearchService,\r\n    private listsService: ListsService,\r\n    private authService: AuthService,\r\n    private invoiceService: InvoiceService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.configs = this.authService.getConfigs();\r\n    if (this.configs && this.configs.integrate_parameter && this.configs.integrate_parameter.integrate_crm && this.configs.integrate_parameter.integrate_crm.is_integrate_his)\r\n      this.isHistory = true;\r\n    this.searchService.getUserAndListType(true).subscribe(rs => {\r\n      if (Array.isArray(rs)) {\r\n        if (rs[0].status == \"success\") {\r\n          localStorage['listtypes'] = JSON.stringify(rs[0].data.listtypes);\r\n          let arrApiGetCategory = this.listsService.getDMBy(this.arrayCategory)\r\n          if (arrApiGetCategory.length > 0) {\r\n            arrApiGetCategory[0].subscribe(response => {\r\n              let _data = [];\r\n              if (response.status == \"success\") {\r\n                _data.push(response);\r\n                this.authService.setDMLocal(_data);\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n    this.loadList();\r\n  }\r\n\r\n  loadList(params?) {\r\n    this.dataSource = {};\r\n    if (params) {\r\n      this.dataSource.store = this.invoiceSyncService.getAll(params);\r\n    } else {\r\n      this.dataSource.store = this.invoiceSyncService.getAll();\r\n    }\r\n  }\r\n\r\n  onRowPrepared(e) {\r\n    if (e.rowType === 'data') {\r\n      // e.rowElement.style.whiteSpace = 'pre-wrap';\r\n      const eles = e.rowElement.getElementsByTagName('td');\r\n      eles[6].style.whiteSpace = 'pre-wrap';\r\n    }\r\n  }\r\n\r\n  // Chọn đối tượng trong màn hình danh sách \r\n  selectionChanged(data: any) {\r\n    this.selectedItems = data.selectedRowsData;\r\n  }\r\n\r\n  xuatHoaDon() {\r\n    const row = this.selectedItems[0];\r\n    if (row && row.template_code == \"2\")\r\n      this.router.navigate([`/system/sale-invoice/${row.id}`]);\r\n    else\r\n      this.router.navigate([`/system/vat-invoice/${row.id}`]);\r\n  }\r\n\r\n  traLai() {\r\n    const row = this.selectedItems[0];\r\n    if (row && row.template_code == \"2\")\r\n      this.router.navigate([`/system/sale-invoice/${row.id}`], { queryParams: { status: 'return' } });\r\n    else\r\n      this.router.navigate([`/system/vat-invoice/${row.id}`], { queryParams: { status: 'return' } });\r\n  }\r\n\r\n  layDeNghiXuat() {\r\n    Library.showloading();\r\n    const sub = this.invoiceSyncService.layDeNghiXuat().subscribe(rs => {\r\n      if (rs.status === 'success') {\r\n        Library.notify('Lấy đề nghị xuất thành công', 'success');\r\n        this.loadList();\r\n      } else {\r\n        Library.notify(rs.message, 'error');\r\n      }\r\n    }, err => {\r\n    }, () => {\r\n      Library.hideloading();\r\n    });\r\n  }\r\n\r\n  customizeText = (url) => {\r\n    this.invoiceService.handleTotalGrid(url.value, this.objStatusBtn, this.dataGrid);\r\n    return '';\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n//library\r\nimport { devextremeModule } from '@core/index';\r\n\r\nimport { SharedModule } from '@shared/index';\r\nimport { InvoiceSyncService } from './shared';\r\nimport { routing } from './invoice-sync.routing';\r\nimport { IndexComponent } from './components/index/index.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    routing,\r\n    devextremeModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    IndexComponent\r\n  ], \r\n  providers: [InvoiceSyncService]\r\n})\r\nexport class InvoiceSyncModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router'; \r\n\r\nimport { IndexComponent } from './components/index/index.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: IndexComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class routing {}\r\n","export * from './invoice-sync.service';","import { Injectable } from '@angular/core';\r\n\r\nimport { ApiService, VStringService } from '@core/index';\r\n\r\n@Injectable()\r\nexport class InvoiceSyncService {\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n  ) { }\r\n\r\n  getAll(params?){\r\n    let includes = '';//'options[sum_payment_wait_export]=1';\r\n    let filter = VStringService._removeNewline(`\r\n&filter_groups[0][filters][0][key]=search_status\r\n&filter_groups[0][filters][0][value]=2\r\n&filter_groups[0][filters][0][operator]=eq\r\n    `);\r\n    if(params){\r\n      filter += '&' + params;\r\n    }\r\n    // let sort = '&sort[0][key]=status_order&sort[0][direction]=ASC&sort[1][key]=invoice_number&sort[1][direction]=DESC'\r\n    return this.apiService.getDataTable(\"/invoices\", includes + filter);\r\n  }\r\n\r\n  layDeNghiXuat() {\r\n    return this.apiService.post(\"/invoices-crm-sync\", {invoice: {from_date: '2010-01-01'}});\r\n  }\r\n}\r\n"],"sourceRoot":""}